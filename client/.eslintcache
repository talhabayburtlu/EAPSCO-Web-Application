[{"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\index.js":"1","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\App.js":"2","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\reportWebVitals.js":"3","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\fire.js":"4","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Login.js":"5","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Action.js":"6","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\generator.js":"7","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\product.js":"8","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\motor.js":"9","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\ups.js":"10","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\productBar.js":"11","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Header.jsx":"12","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Procedures.js":"13"},{"size":526,"mtime":1610368859668,"results":"14","hashOfConfig":"15"},{"size":2150,"mtime":1610392445281,"results":"16","hashOfConfig":"15"},{"size":415,"mtime":1610368859670,"results":"17","hashOfConfig":"15"},{"size":418,"mtime":1610368859667,"results":"18","hashOfConfig":"15"},{"size":1291,"mtime":1610368859662,"results":"19","hashOfConfig":"15"},{"size":2857,"mtime":1610391943925,"results":"20","hashOfConfig":"15"},{"size":2943,"mtime":1610368859663,"results":"21","hashOfConfig":"15"},{"size":2906,"mtime":1610368859664,"results":"22","hashOfConfig":"15"},{"size":2863,"mtime":1610368859664,"results":"23","hashOfConfig":"15"},{"size":2948,"mtime":1610368859666,"results":"24","hashOfConfig":"15"},{"size":815,"mtime":1610368859665,"results":"25","hashOfConfig":"15"},{"size":2337,"mtime":1610392456893,"results":"26","hashOfConfig":"15"},{"size":0,"mtime":1610383116410,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"quu49s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\index.js",[],["59","60"],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\App.js",["61","62","63","64","65","66","67"],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\reportWebVitals.js",[],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\fire.js",[],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Login.js",[],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Action.js",["68","69"],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\generator.js",["70","71","72"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Grid, Paper, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\n\r\nimport ProductBar from \"./productBar\"\r\n\r\nconst Generator = (props) => {\r\n    let [rows, setRows] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        rows = await rowValues()\r\n    }, [])\r\n\r\n    const rowValues = async () => {\r\n        let products;\r\n        let data = []\r\n\r\n        await axios({method: \"get\", url: \"/products\"})\r\n            .then(res => products = res.data)\r\n            .catch(err => console.log(err))\r\n\r\n        products._embedded.generators.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\", g.dimensions, g.fuelCapacity, g.power))\r\n        })\r\n\r\n\r\n        data.sort((a, b) => {\r\n            return a.id - b.id\r\n        })\r\n\r\n        setRows(data)\r\n    }\r\n\r\n    const createData = (id, price, type, sold, dimensions, fuelCapacity, power) => {\r\n        return {id, price, type, sold, dimensions, fuelCapacity, power}\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{}}>\r\n            <ProductBar/>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TableContainer component={Paper} style={{margin: \"25px 0px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                            <TableCell align=\"right\">Sold</TableCell>\r\n                            <TableCell align=\"right\">Dimensions</TableCell>\r\n                            <TableCell align=\"right\">Fuel Capacity</TableCell>\r\n                            <TableCell align=\"right\">Power</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows != null ? rows.map(row => {\r\n                            return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell>{row.id}</TableCell>\r\n                                    <TableCell>{row.price}</TableCell>\r\n                                    <TableCell>{row.type}</TableCell>\r\n                                    <TableCell>{row.sold}</TableCell>\r\n                                    <TableCell>{row.dimensions}</TableCell>\r\n                                    <TableCell>{row.fuelCapacity}</TableCell>\r\n                                    <TableCell>{row.power}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        }) : null}\r\n                    </TableBody>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Generator;","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\product.js",["73","74","75","76","77","78"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Grid, Paper, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\n\r\nimport ProductBar from \"./productBar\"\r\n\r\nconst Product = (props) => {\r\n    let [rows, setRows] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        rows = await rowValues()\r\n    }, [])\r\n\r\n    const rowValues = async () => {\r\n        let products;\r\n        let data = []\r\n\r\n        await axios({method: \"get\", url: \"/products\"})\r\n            .then(res => products = res.data)\r\n            .catch(err => console.log(err))\r\n\r\n\r\n        products._embedded.generators.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\"))\r\n        })\r\n\r\n        products._embedded.motors.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\"))\r\n        })\r\n\r\n        products._embedded.upses.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\"))\r\n        })\r\n\r\n        products._embedded.products.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\"))\r\n        })\r\n\r\n        data.sort((a, b) => {\r\n            return a.id - b.id\r\n        })\r\n\r\n        setRows(data)\r\n    }\r\n\r\n    const createData = (id, price, type, sold) => {\r\n        return {id, price, type, sold}\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{}}>\r\n            <ProductBar/>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TableContainer component={Paper} style={{margin: \"25px 0px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                            <TableCell align=\"right\">Sold</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows != null ? rows.map(row => {\r\n                            return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell>{row.id}</TableCell>\r\n                                    <TableCell>{row.price}</TableCell>\r\n                                    <TableCell>{row.type}</TableCell>\r\n                                    <TableCell>{row.sold}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        }) : null}\r\n                    </TableBody>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Product;","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\motor.js",["79","80","81"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Grid, Paper, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\n\r\nimport ProductBar from \"./productBar\"\r\n\r\nconst Motor = (props) => {\r\n    let [rows, setRows] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        rows = await rowValues()\r\n    }, [])\r\n\r\n    const rowValues = async () => {\r\n        let products;\r\n        let data = []\r\n\r\n        await axios({method: \"get\", url: \"/products\"})\r\n            .then(res => products = res.data)\r\n            .catch(err => console.log(err))\r\n\r\n\r\n        products._embedded.motors.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\", g.mtype, g.power, g.rpm))\r\n        })\r\n\r\n\r\n        data.sort((a, b) => {\r\n            return a.id - b.id\r\n        })\r\n\r\n        setRows(data)\r\n    }\r\n\r\n    const createData = (id, price, type, sold, mtype, power, rpm) => {\r\n        return {id, price, type, sold, mtype, power, rpm}\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{}}>\r\n            <ProductBar/>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TableContainer component={Paper} style={{margin: \"25px 0px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                            <TableCell align=\"right\">Sold</TableCell>\r\n                            <TableCell align=\"right\">M type</TableCell>\r\n                            <TableCell align=\"right\">Power</TableCell>\r\n                            <TableCell align=\"right\">RPM</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows != null ? rows.map(row => {\r\n                            return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell>{row.id}</TableCell>\r\n                                    <TableCell>{row.price}</TableCell>\r\n                                    <TableCell>{row.type}</TableCell>\r\n                                    <TableCell>{row.sold}</TableCell>\r\n                                    <TableCell>{row.mtype}</TableCell>\r\n                                    <TableCell>{row.power}</TableCell>\r\n                                    <TableCell>{row.rpm}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        }) : null}\r\n                    </TableBody>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Motor;","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\ups.js",["82","83","84"],"import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\";\r\nimport {Grid, Paper, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\r\n\r\nimport ProductBar from \"./productBar\"\r\n\r\nconst UPS = (props) => {\r\n    let [rows, setRows] = useState(null)\r\n\r\n    useEffect(async () => {\r\n        rows = await rowValues()\r\n    }, [])\r\n\r\n    const rowValues = async () => {\r\n        let products;\r\n        let data = []\r\n\r\n        await axios({method: \"get\", url: \"/products\"})\r\n            .then(res => products = res.data)\r\n            .catch(err => console.log(err))\r\n\r\n        console.log(products)\r\n\r\n        products._embedded.upses.map(g => {\r\n            data.push(createData(g._links.self.href.split(\"/\").pop(), g.price, g.type, g.sold ? \"True\" : \"False\", g.capacity, g.dimensions, g.voltage))\r\n        })\r\n\r\n\r\n        data.sort((a, b) => {\r\n            return a.id - b.id\r\n        })\r\n\r\n        setRows(data)\r\n    }\r\n\r\n    const createData = (id, price, type, sold, capacity, dimensions, voltage) => {\r\n        return {id, price, type, sold, capacity, dimensions, voltage}\r\n    }\r\n\r\n    return (\r\n        <Grid container justify=\"center\" style={{}}>\r\n            <ProductBar/>\r\n            <Grid item xs={12} align=\"center\">\r\n                <TableContainer component={Paper} style={{margin: \"25px 0px\"}}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"left\">ID</TableCell>\r\n                            <TableCell align=\"left\">Price</TableCell>\r\n                            <TableCell align=\"right\">Type</TableCell>\r\n                            <TableCell align=\"right\">Sold</TableCell>\r\n                            <TableCell align=\"right\">Capacity</TableCell>\r\n                            <TableCell align=\"right\">Dimensions</TableCell>\r\n                            <TableCell align=\"right\">Voltage</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows != null ? rows.map(row => {\r\n                            return (\r\n                                <TableRow key={row.id}>\r\n                                    <TableCell>{row.id}</TableCell>\r\n                                    <TableCell>{row.price}</TableCell>\r\n                                    <TableCell>{row.type}</TableCell>\r\n                                    <TableCell>{row.sold}</TableCell>\r\n                                    <TableCell>{row.capacity}</TableCell>\r\n                                    <TableCell>{row.dimensions}</TableCell>\r\n                                    <TableCell>{row.voltage}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        }) : null}\r\n                    </TableBody>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default UPS;","D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\components\\product\\productBar.js",[],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Header.jsx",["85","86","87"],"D:\\Casper\\Documents\\React\\EAPSCO-Web-Application\\client\\src\\Procedures.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},{"ruleId":"92","severity":1,"message":"96","line":7,"column":10,"nodeType":"94","messageId":"95","endLine":7,"endColumn":16},{"ruleId":"92","severity":1,"message":"97","line":7,"column":18,"nodeType":"94","messageId":"95","endLine":7,"endColumn":23},{"ruleId":"92","severity":1,"message":"98","line":7,"column":25,"nodeType":"94","messageId":"95","endLine":7,"endColumn":31},{"ruleId":"92","severity":1,"message":"99","line":16,"column":22,"nodeType":"94","messageId":"95","endLine":16,"endColumn":35},{"ruleId":"100","severity":1,"message":"101","line":34,"column":11,"nodeType":"102","messageId":"103","endLine":44,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":66,"column":6,"nodeType":"106","endLine":66,"endColumn":8,"suggestions":"107"},{"ruleId":"92","severity":1,"message":"96","line":2,"column":9,"nodeType":"94","messageId":"95","endLine":2,"endColumn":15},{"ruleId":"92","severity":1,"message":"108","line":42,"column":11,"nodeType":"94","messageId":"95","endLine":42,"endColumn":18},{"ruleId":"104","severity":1,"message":"109","line":10,"column":15,"nodeType":"110","endLine":12,"endColumn":6},{"ruleId":"104","severity":1,"message":"111","line":11,"column":16,"nodeType":"112","endLine":11,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":22,"column":45,"nodeType":"110","messageId":"115","endLine":22,"endColumn":47},{"ruleId":"104","severity":1,"message":"109","line":10,"column":15,"nodeType":"110","endLine":12,"endColumn":6},{"ruleId":"104","severity":1,"message":"111","line":11,"column":16,"nodeType":"112","endLine":11,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":23,"column":45,"nodeType":"110","messageId":"115","endLine":23,"endColumn":47},{"ruleId":"113","severity":1,"message":"114","line":27,"column":41,"nodeType":"110","messageId":"115","endLine":27,"endColumn":43},{"ruleId":"113","severity":1,"message":"114","line":31,"column":40,"nodeType":"110","messageId":"115","endLine":31,"endColumn":42},{"ruleId":"113","severity":1,"message":"114","line":35,"column":43,"nodeType":"110","messageId":"115","endLine":35,"endColumn":45},{"ruleId":"104","severity":1,"message":"109","line":10,"column":15,"nodeType":"110","endLine":12,"endColumn":6},{"ruleId":"104","severity":1,"message":"111","line":11,"column":16,"nodeType":"112","endLine":11,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":23,"column":41,"nodeType":"110","messageId":"115","endLine":23,"endColumn":43},{"ruleId":"104","severity":1,"message":"109","line":10,"column":15,"nodeType":"110","endLine":12,"endColumn":6},{"ruleId":"104","severity":1,"message":"111","line":11,"column":16,"nodeType":"112","endLine":11,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":24,"column":40,"nodeType":"110","messageId":"115","endLine":24,"endColumn":42},{"ruleId":"92","severity":1,"message":"116","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"97","line":5,"column":9,"nodeType":"94","messageId":"95","endLine":5,"endColumn":14},{"ruleId":"92","severity":1,"message":"117","line":5,"column":16,"nodeType":"94","messageId":"95","endLine":5,"endColumn":26},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-unused-vars","'Procedures' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'setHasAccount' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authListener'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'classes' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'rows' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Action' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},"Update the dependencies array to be: [authListener]",{"range":"123","text":"124"},[1597,1599],"[authListener]"]